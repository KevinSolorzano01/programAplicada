sensors =  {"living room": 21, "kitchen": 23, "bedroom": 20, "pantry": 22} # se crea el diccionario sensores
num_cameras = {"backyard": 6,  "garage": 2, "driveway": 1} 

print(sensors)   # se imprime el diccionario sensores con sus respectivas palabras clave    
print(num_cameras) 
translations = {"mountain": "orod", "bread": "bass", "friend": "mellon", "horse": "roch" } # se crea el diccionario transletions 
print(translations)

#Verifiying an error:
listaa = [1, 2, 4, 8, 16]
powers = {listaa: 2}
print(powers)    # se genera un error, por que un diccionario no puede contener una lista como palabra clave 

children = {"von Trapp": ["Johannes", "Rosmarie", "Eleonore"] , "Corleone": ["Sonny", "Fredo", "Michael"]}  # Se crea un diccionario  en el que el valor de la clave es una lista 
print(children)

my_empty_dictionary = {} #Se crea un diccionario vacio y se imprime
print(my_empty_dictionary)

menu = {"oatmeal": 3, "avocado toast": 6, "carrot juice": 5, "blueberry muffin": 2} #se crea el diccionario Menu
print("Before: ", menu)              # imprime el diccionario menu despues de el string Before 
menu["cheesecake"] = 8               # Se agregó el elemento cheesecake con el valor 8
print("After", menu)                 # Se imprime el diccionario menu con el nuevo elemento despues del string After 
animals_in_zoo = {"dinosaurs": 0}    # se crea el diccionario animals_in_zoo
animals_in_zoo = {"dinosaurs": 0}
animals_in_zoo = {"horses": 2}       # Se actualiza el contenido del diccionario 
print(animals_in_zoo)                # se imprime el diccionario actualizado 

# Agregar multiples claves 
sensors = {"living room": 21, "kitchen": 23, "bedroom": 20}
print("Before", sensors)


# Si quisiéramos añadir 3 nuevas habitaciones, podríamos utilizar:

sensors.update({"pantry": 22, "guest room": 25, "patio": 34})
print("After", sensors)

user_ids = {"teraCoder": 9018293, "proProgrammer": 119238}
print(user_ids)
user_ids.update({"theLooper": 138475, "stringQueen": 85739}) # se agrega un usuario y su ids
print(user_ids)


## Sobrescribir valores ##
#Sabemos que podemos agregar una clave usando la siguiente sintaxis:
menu["banana"] = 3 
menu = {"oatmeal": 3, "avocado toast": 6, "carrot juice": 5, "blueberry muffin": 2}
print("Before: ", menu)
menu["oatmeal"] = 5
print("After", menu)  


## Observe que el valor de "avena" ahora ha cambiado a 5.

oscar_winners = {"Best Picture": "La La Land", "Best Actor": "Casey Affleck", "Best Actress": "Emma Stone", "Animated Feature": "Zootopia"}
print("Before", oscar_winners)
print()
oscar_winners.update({"Supporting Actress": "Viola Davis"})
print("After1", oscar_winners)
print()
oscar_winners["Best Picture"] = "Moonlight"
print("After2", oscar_winners)


###Comprensiones de dictado
#Digamos que tenemos dos listas que queremos combinar en una
#diccionario, como una lista de estudiantes y una lista de sus alturas,
#en pulgadas:

names = ['Jenny', 'Alexus', 'Sam', 'Grace']
heights = [61, 70, 67, 64]

#Python te permite crear un diccionario usando
# un dictado de comprensión, con esta sintaxis:

zipStudents = zip(names, heights)
print("zipStudents: ", zipStudents)

students = {key:value for key, value in zip(names, heights)}
students is now {'Jenny': 61, 'Alexus': 70, 'Sam': 67, 'Grace': 64}
print(students)

# #zip() combina dos listas en un iterador de tuplas con los elementos de la lista emparejados. Esta comprensión del dictado

drinks = ["espresso", "chai", "decaf", "drip"]
caffeine = [64, 40, 0, 120]

zipped_drinks = zip(drinks, caffeine)
print(zipped_drinks)

drinks_to_caffeine = {key:value for key, value in zipped_drinks}
print(drinks_to_caffeine)

songs = ["Like a Rolling Stone", "Satisfaction", "Imagine", "What's Going On", "Respect", "Good Vibrations"]
playcounts = [78, 29, 44, 21, 89, 5]
plays = {key:value for key, value in zip(songs, playcounts)} # crea un diccionario, donde las claves son cada elemento de una tupla y le asigna los valores de otra tupla como valores de la clave  
print(plays)
plays.update({"Purple Haze": 1})
plays.update({"Respect": 94})  # Se pueden agregar dos elementos al diccionario creado normalmente con update  
print("After: ", plays)
library = {"The Best Songs": plays, "Sunday Feelings": {}} #Se crea un diccionario que tiene como valores clave dos diccionarios, el que previamente se habia creado y uno vacio.
print(library) 




